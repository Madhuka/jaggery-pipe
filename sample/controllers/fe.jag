<%

var pipe = require('pipe');
var log = new Log();
var router = require('jaggery-router');//require('/extensions/universal/simpleRouter.js');
var caramelRenderer = require('/extensions/universal/caramelRenderer.js');
var asset = require('/routes/asset.js');
var api = require('/routes/api.js');
var user = require('/routes/user.js');
var document = require('/routes/document.js');
var basicAuth = require('/extensions/universal/basicAuth.js');
var errHandler = require('/extensions/universal/simpleErrorHandler.js')
//pipe.pipes.init(require('/profiles/default.js'));


pipe.pipes.plug(require('/extensions/universal/simpleTenantParser.js'));
//pipe.pipes.plug('/asset/',basicAuth);   //Apply basic auth to routes starting with /asset/
pipe.pipes.plug(router);
pipe.pipes.plug(errHandler);


errHandler.environment = 'dev';

router.app.config({inheritRoutes:true});
//router.app.utils('get-renderer',caramelRenderer.render);

router.app.del('/:context/user', user.logoutUser);
router.app.put('/:context/asset/:type/:id',asset.putAsset);
router.app.put('/:context/asset/api/:id',api.putApi);

//Setup some simple routes
router.app.get(['/:context/t/:tenant/asset/:type/top', '/:context/asset/:type/top'], asset.getTopAssets);
router.app.get(['/:context/t/:tenant/asset/:type/:id', '/:context/asset/:type/:id'], asset.getAsset);


router.app.get('/:context/asset/:type/sample',asset.getAssetSample);
//The documents are publicly available to anyone,so no basic auth
router.app.get('/:context/document/:type/:id', document.getDocument);


//Override the top assets routes for just the APIs into a custom router
router.app.get('/:context/asset/api/top', api.getTopApis);
router.app.get('/:context/asset/api/offers',api.getApiOffers);
router.app.get('/:context/asset/api/:id',api.getApi);




//router.app.get(['/{context}/asset/{type}/{id}','/{context}/asset/t/{tenant}/asset/{type}/{id}'],asset.getAsset);
//router.app.put(['/{context}/asset/{type}/{id}','/{context}/asset/t/{tenant}/asset/{type}/{id}'],asset.updateAsset);
//router.app.delete(['/{context}/asset/{type}/{id}','/{context}/asset/t/{tenant}/asset/{type}/{id}'],asset.deleteAsset);
//router.app.post(['/{context}/asset/{type}/{id}','/{context}/asset/t/{tenant}/asset/{type}/{id}'],asset.createAsset);

//router.app.get('/{context}/topassets/{type}',asset.topSuperTenantAsset);
//router.app.get('/{context}/t/{tenant}/topassets/{type}',asset.topTenantAsset);

//router.app.overrideGet('/{context}/topassets/{type}','/{context}/topassets/api',api.apiTopAssets);

// router.app.get('/{context}/topassets',asset.overridenSuperTenantAsset);


pipe.pipes.handle(request,response,session);


//var LayerStack=require('/themes/default/route-map.js').LayerStack;
//var l=new LayerStack();


//l.push(1);
//l.push(2);

//log.info(l.layers);
//log.info(l.pop());
//log.info(l.pop());
//log.info(l.pop());
//var RouteMap = require('jaggery-router').RouteMap;
//var rm=new RouteMap();

//rm.add('/:context/asset/:type/:id','1');
//rm.add('/:context/asset/api/:id','2');
//var match=rm.match(request.getRequestURI());

//log.info(rm.map);
//log.info(match);


// var caramel=require('caramel');
// caramel.render({});

%>