<%

var pipe = require('pipe');
var log = new Log();
var router = require('router');//require('/extensions/universal/simpleRouter.js');
var common=require('pipe-common');
var caramelRenderer = require('/extensions/universal/caramelRenderer.js');
var asset = require('/routes/asset.js');
var api = require('/routes/api.js');
var user = require('/routes/user.js');
var document = require('/routes/document.js');

var myPlugin=require('/extensions/pipe-plugins/my-plugin.js');
var myErrPlugin=require('/extensions/pipe-plugins/my-err-plugin.js');
//pipe.pipes.init(require('/profiles/default.js'));
//common.errHandler.env('production');
//pipe.plug(common.basicAuth);
//pipe.plug(common.logger);
var staticContent=require('/extensions/pipe-plugins/static-content-handler.js');
staticContent.app.setDir('/themes/default/public');
pipe.plug('/themes/default/public/',staticContent);
pipe.plug(common.tenantParser);
pipe.plug(common.bodyParser);
pipe.plug(common.queryParser);

pipe.plug(router);
pipe.plug(common.errHandler);


log.info('env: '+common.errHandler.env());

//router.app.config({inheritRoutes:true});
router.app.utils('get-renderer',caramelRenderer.render);

router.app.del('/user', user.logoutUser);
router.app.post('/asset/:type',asset.postAsset);
router.app.put('/asset/:type/:id',asset.putAsset);
router.app.get('/asset/api/top',api.getTopApis);
//router.app.put('/asset/api/:id',api.putApi);
router.app.get('/user/logout',user.logoutUser);

//Setup some simple routes
router.app.get(['/t/:tenant/asset/:type/top', '/asset/:type/top'], asset.getTopAssets);
router.app.get(['/t/:tenant/asset/:type/:id', '/asset/:type/:id'], asset.getAsset);


router.app.get('/asset/:type/sample',asset.getAssetSample);
//The documents are publicly available to anyone,so no basic auth
router.app.get('/document/:type/:id', document.getDocument);

router.app.get('/asset/api/:id',api.getApi);

//pipe.resolve(request,response,session);



var entity=require('/modules/entity.js').entity;
var utils=require('/modules/utils.js');
var entityLogger=require('/extensions/entity-plugins/entity-logger.js').entityPlugin;

require('/entities/gadget.js');

var AssetSchema=new entity.EntitySchema('Asset',{
    id:Number,
    name:String,
    type:String,
    path:{type:String, required:true,default:'_system'}
});

AssetSchema.methods.sayHello=function(){
    return 'Hello, my name is '+this.name;
}

AssetSchema.static.getAllTypes=function(){
    return ['gadgets','sites'] ;
};

AssetSchema.plugin(entityLogger,{title:'Tester'});

var Asset=entity.Entity('Asset');

//Asset.test\();

var firstAsset=new Asset();
firstAsset.name='John';

var secondAsset=new Asset({name:'Smith', type:'Gadget'});

log.info(secondAsset.sayHello());
log.info(firstAsset.sayHello());

secondAsset.save();
log.info(Asset.getAllTypes());

log.info(firstAsset.path);

var Gadget=entity.Entity('Gadget');

var gadget=new Gadget();

gadget.install();

gadget.save();
gadget.remove();
//log.info(firstAsset.logType);

%>